{"version":3,"file":"announcement/announcement-editor.min.js","mappings":"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","sources":["webpack://mdhs-blocks/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://mdhs-blocks/./blocks/announcement/announcement.js"],"sourcesContent":["/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import Cookies from 'js-cookie';\n\nconst announcements = document.querySelectorAll('.announcement');\n\nannouncements.forEach(announcement => {\n  const expander = announcement.querySelector('.announcement__expander');\n\n  const key = announcement.dataset.key;\n\n  expander.addEventListener('click', () => {\n    announcement.classList.toggle('closed');\n    if (!Cookies.get(key) && announcement.classList.contains('closed')) {\n      Cookies.set(key, true, { expires: 7 });\n    }\n  });\n\n  const bodyHeight = announcement.querySelector('.announcement__body').getBoundingClientRect().height;\n\n  announcement.querySelector('.announcement__body').style.setProperty('--height', `${bodyHeight}px`);\n  announcement.classList.add('init');\n\n  const alreadyClosed = Cookies.get(key) && Cookies.get(key) === 'true';\n\n  if (announcement.classList.contains('delay') && !alreadyClosed) {\n    const delay = parseInt(announcement.dataset.delay);\n    setTimeout(() => {\n      announcement.classList.remove('closed');\n    }, delay * 1000);\n  } else if (announcement.classList.contains('viewport') && !alreadyClosed) {\n    const observer = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting) {\n          announcement.classList.remove('closed');\n          observer.unobserve(announcement);\n        }\n      },\n      {\n        // threshold: 1,\n        rootMargin: `-25% 0% -25% 0%`,\n      }\n    );\n    observer.observe(announcement);\n  } else if (!alreadyClosed) {\n    announcement.classList.remove('closed');\n  }\n});\n"],"names":["target","i","arguments","length","source","key","api","init","converter","defaultAttributes","set","name","value","attributes","document","expires","Date","now","toUTCString","encodeURIComponent","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","split","cookie","write","Object","create","get","cookies","jar","parts","slice","join","found","read","e","remove","withAttributes","this","withConverter","freeze","path","querySelectorAll","forEach","announcement","expander","querySelector","dataset","addEventListener","classList","toggle","Cookies","contains","bodyHeight","getBoundingClientRect","height","style","setProperty","concat","add","alreadyClosed","delay","parseInt","setTimeout","observer","IntersectionObserver","entries","isIntersecting","unobserve","rootMargin","observe"],"sourceRoot":""}